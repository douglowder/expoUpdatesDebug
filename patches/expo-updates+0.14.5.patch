diff --git a/node_modules/expo-updates/ios/EXUpdates.podspec b/node_modules/expo-updates/ios/EXUpdates.podspec
index b2ad346..cfb7e81 100644
--- a/node_modules/expo-updates/ios/EXUpdates.podspec
+++ b/node_modules/expo-updates/ios/EXUpdates.podspec
@@ -23,14 +23,19 @@ Pod::Spec.new do |s|
   s.dependency 'EASClient'
   s.dependency 'ASN1Decoder', '~> 1.8'
 
+  ex_updates_native_debug = ENV['EX_UPDATES_NATIVE_DEBUG'] == '1'
+
+  other_c_flags = ex_updates_native_debug ? "$(inherited) -DEX_UPDATES_NATIVE_DEBUG=1" : "$(inherited)"
+
   s.pod_target_xcconfig = {
     'GCC_TREAT_INCOMPATIBLE_POINTER_TYPE_WARNINGS_AS_ERRORS' => 'YES',
     'GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS' => 'YES',
     'DEFINES_MODULE' => 'YES',
-    'SWIFT_COMPILATION_MODE' => 'wholemodule'
+    'SWIFT_COMPILATION_MODE' => 'wholemodule',
+    'OTHER_CFLAGS[config=Debug]' => other_c_flags
   }
 
-  if !$ExpoUseSources&.include?(package['name']) && ENV['EXPO_USE_SOURCE'].to_i == 0 && File.exist?("#{s.name}.xcframework") && Gem::Version.new(Pod::VERSION) >= Gem::Version.new('1.10.0')
+  if !ex_updates_native_debug && !$ExpoUseSources&.include?(package['name']) && ENV['EXPO_USE_SOURCE'].to_i == 0 && File.exist?("#{s.name}.xcframework") && Gem::Version.new(Pod::VERSION) >= Gem::Version.new('1.10.0')
     s.source_files = "#{s.name}/**/*.h"
     s.vendored_frameworks = "#{s.name}.xcframework"
   else
@@ -38,9 +43,10 @@ Pod::Spec.new do |s|
   end
 
   if $expo_updates_create_manifest != false
+    force_bundling_flag = ex_updates_native_debug ? "export FORCE_BUNDLING=1\n" : ""
     s.script_phase = {
       :name => 'Generate app.manifest for expo-updates',
-      :script => 'bash -l -c "$PODS_TARGET_SRCROOT/../scripts/create-manifest-ios.sh"',
+      :script => force_bundling_flag + 'bash -l -c "$PODS_TARGET_SRCROOT/../scripts/create-manifest-ios.sh"',
       :execution_position => :before_compile
     }
 
diff --git a/node_modules/expo-updates/ios/EXUpdates/EXUpdatesUtils.h b/node_modules/expo-updates/ios/EXUpdates/EXUpdatesUtils.h
index a5487b9..a3cef47 100644
--- a/node_modules/expo-updates/ios/EXUpdates/EXUpdatesUtils.h
+++ b/node_modules/expo-updates/ios/EXUpdates/EXUpdatesUtils.h
@@ -18,6 +18,7 @@ NS_ASSUME_NONNULL_BEGIN
 + (NSString *)getRuntimeVersionWithConfig:(EXUpdatesConfig *)config;
 + (NSURL *)urlForBundledAsset:(EXUpdatesAsset *)asset;
 + (NSString *)pathForBundledAsset:(EXUpdatesAsset *)asset;
++ (BOOL)nativeDebugging;
 
 @end
 
diff --git a/node_modules/expo-updates/ios/EXUpdates/EXUpdatesUtils.m b/node_modules/expo-updates/ios/EXUpdates/EXUpdatesUtils.m
index 3ff9497..214dda2 100644
--- a/node_modules/expo-updates/ios/EXUpdates/EXUpdatesUtils.m
+++ b/node_modules/expo-updates/ios/EXUpdates/EXUpdatesUtils.m
@@ -134,6 +134,15 @@ static NSString * const EXUpdatesUtilsErrorDomain = @"EXUpdatesUtils";
     : [[NSBundle mainBundle] pathForResource:asset.mainBundleFilename ofType:asset.type];
 }
 
++ (BOOL)nativeDebugging
+{
+#if EX_UPDATES_NATIVE_DEBUG
+  return YES;
+#else
+  return NO;
+#endif
+}
+
 @end
 
 NS_ASSUME_NONNULL_END
diff --git a/node_modules/expo-updates/ios/EXUpdates/ReactDelegateHandler/ExpoUpdatesAppDelegateSubscriber.swift b/node_modules/expo-updates/ios/EXUpdates/ReactDelegateHandler/ExpoUpdatesAppDelegateSubscriber.swift
index 395b126..f5d4ba4 100644
--- a/node_modules/expo-updates/ios/EXUpdates/ReactDelegateHandler/ExpoUpdatesAppDelegateSubscriber.swift
+++ b/node_modules/expo-updates/ios/EXUpdates/ReactDelegateHandler/ExpoUpdatesAppDelegateSubscriber.swift
@@ -5,7 +5,7 @@ import EXUpdatesInterface
 
 public class ExpoUpdatesAppDelegateSubscriber: ExpoAppDelegateSubscriber {
   public func application(_ application: UIApplication, willFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil) -> Bool {
-    if EXAppDefines.APP_DEBUG {
+    if EXAppDefines.APP_DEBUG && !EXUpdatesUtils.nativeDebugging() {
       EXUpdatesControllerRegistry.sharedInstance().controller = EXUpdatesDevLauncherController.sharedInstance()
     }
     return true
diff --git a/node_modules/expo-updates/ios/EXUpdates/ReactDelegateHandler/ExpoUpdatesReactDelegateHandler.swift b/node_modules/expo-updates/ios/EXUpdates/ReactDelegateHandler/ExpoUpdatesReactDelegateHandler.swift
index cf7087a..0f1a6c3 100644
--- a/node_modules/expo-updates/ios/EXUpdates/ReactDelegateHandler/ExpoUpdatesReactDelegateHandler.swift
+++ b/node_modules/expo-updates/ios/EXUpdates/ReactDelegateHandler/ExpoUpdatesReactDelegateHandler.swift
@@ -10,7 +10,7 @@ public class ExpoUpdatesReactDelegateHandler: ExpoReactDelegateHandler, EXUpdate
   private var rootViewModuleName: String?
   private var rootViewInitialProperties: [AnyHashable: Any]?
   private lazy var shouldEnableAutoSetup: Bool = {
-    if EXAppDefines.APP_DEBUG {
+    if EXAppDefines.APP_DEBUG && !EXUpdatesUtils.nativeDebugging() {
       return false
     }
     // if Expo.plist not found or its content is invalid, disable the auto setup
